"""Initial migration

Revision ID: 04d5461bcfb8
Revises: 
Create Date: 2022-11-21 13:50:16.441603

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '04d5461bcfb8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('complement', sa.String(), nullable=True),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('neighborhood', sa.String(), nullable=True),
    sa.Column('uf', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auto_allergies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('auto_comorbidities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('auto_external_drugs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('dosage', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('auto_nursing_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auto_resting_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cid10',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('value', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drug_group_presets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drugs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('usual_dosage', sa.String(), nullable=True),
    sa.Column('usual_route', sa.String(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True, comment='Aqui pode colocar alguma dica de uso em pediatria, ou melhor aplicação de antibioticoterapia, além de restrição de uso'),
    sa.Column('kind', sa.Enum('atb', 'oth', name='drugkindenum'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fluid_balance_description',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('states',
    sa.Column('ibge_code', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('uf', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ibge_code')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('cpf', sa.String(), nullable=True),
    sa.Column('cns', sa.String(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('professional_category', sa.Enum('doc', 'nur', 'tec', name='professionalcategoryenum'), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('professional_document_uf', sa.String(), nullable=True),
    sa.Column('professional_document_number', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cns'),
    sa.UniqueConstraint('cpf'),
    sa.UniqueConstraint('email')
    )
    op.create_table('_drug_group_preset',
    sa.Column('drug_group_preset_id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_group_preset_id'], ['drug_group_presets.id'], ),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.PrimaryKeyConstraint('drug_group_preset_id', 'drug_id')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sex', sa.Enum('male', 'fema', name='sexenum'), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('cpf', sa.String(), nullable=True),
    sa.Column('cns', sa.String(), nullable=True),
    sa.Column('rg', sa.String(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cns'),
    sa.UniqueConstraint('cpf'),
    sa.UniqueConstraint('rg')
    )
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resting_activity_id', sa.Integer(), nullable=True),
    sa.Column('diet_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['diet_id'], ['diets.id'], ),
    sa.ForeignKeyConstraint(['resting_activity_id'], ['auto_resting_activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('_nursing_activity_prescription',
    sa.Column('nursing_activity_id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['nursing_activity_id'], ['auto_nursing_activities.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('nursing_activity_id', 'prescription_id')
    )
    op.create_table('_patient_allergy',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('allergy_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['allergy_id'], ['auto_allergies.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('patient_id', 'allergy_id')
    )
    op.create_table('_patient_comorbidity',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('comorbidity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comorbidity_id'], ['auto_comorbidities.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('patient_id', 'comorbidity_id')
    )
    op.create_table('drug_prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=True),
    sa.Column('dosage', sa.String(), nullable=True),
    sa.Column('route', sa.String(), nullable=True),
    sa.Column('initial_date', sa.DateTime(), nullable=True),
    sa.Column('ending_date', sa.DateTime(), nullable=True),
    sa.Column('prescription_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drugs.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('internments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admission_datetime', sa.DateTime(), nullable=False),
    sa.Column('hpi', sa.Text(), nullable=False, comment='History of the Present Illness / HMA'),
    sa.Column('justification', sa.Text(), nullable=False, comment='Justificativa de internamento'),
    sa.Column('waiting_vacancy', sa.Boolean(), nullable=True, comment='Aguardando vaga na Regulação'),
    sa.Column('regulation_code', sa.String(), nullable=True, comment='Número de registro da regulação'),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('professional_id', sa.Integer(), nullable=True),
    sa.Column('cid10_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['cid10_code'], ['cid10.code'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evolutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True, comment='Evolução do paciente com exame físico e sinais vitais'),
    sa.Column('professional_id', sa.Integer(), nullable=True),
    sa.Column('internment_id', sa.Integer(), nullable=True),
    sa.Column('cid10_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['cid10_code'], ['cid10.code'], ),
    sa.ForeignKeyConstraint(['internment_id'], ['internments.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fluid_balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('description_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('professional_id', sa.Integer(), nullable=True),
    sa.Column('internment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['description_id'], ['fluid_balance_description.id'], ),
    sa.ForeignKeyConstraint(['internment_id'], ['internments.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spO2', sa.Integer(), nullable=True),
    sa.Column('pain', sa.Integer(), nullable=True),
    sa.Column('systolic_bp', sa.Integer(), nullable=True),
    sa.Column('diastolic_bp', sa.Integer(), nullable=True),
    sa.Column('cardiac_freq', sa.Integer(), nullable=True),
    sa.Column('respiratory_freq', sa.Integer(), nullable=True),
    sa.Column('celcius_axillary_temperature', sa.Integer(), nullable=True),
    sa.Column('glucose', sa.Integer(), nullable=True),
    sa.Column('fetal_cardiac_freq', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('professional_id', sa.Integer(), nullable=True),
    sa.Column('internment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['internment_id'], ['internments.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pendings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True, comment='Evolução do paciente com exame físico e sinais vitais'),
    sa.Column('professional_id', sa.Integer(), nullable=True),
    sa.Column('internment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['internment_id'], ['internments.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pendings')
    op.drop_table('measures')
    op.drop_table('fluid_balance')
    op.drop_table('evolutions')
    op.drop_table('internments')
    op.drop_table('drug_prescriptions')
    op.drop_table('_patient_comorbidity')
    op.drop_table('_patient_allergy')
    op.drop_table('_nursing_activity_prescription')
    op.drop_table('prescriptions')
    op.drop_table('patients')
    op.drop_table('_drug_group_preset')
    op.drop_table('users')
    op.drop_table('states')
    op.drop_table('fluid_balance_description')
    op.drop_table('drugs')
    op.drop_table('drug_group_presets')
    op.drop_table('diets')
    op.drop_table('config')
    op.drop_table('cid10')
    op.drop_table('auto_resting_activities')
    op.drop_table('auto_nursing_activities')
    op.drop_table('auto_external_drugs')
    op.drop_table('auto_comorbidities')
    op.drop_table('auto_allergies')
    op.drop_table('address')
    # ### end Alembic commands ###
